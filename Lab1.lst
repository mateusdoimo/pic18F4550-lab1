;  LST file generated by mikroListExporter - v.2.0 
; Date/Time: 08/06/2021 18:51:59
;----------------------------------------------

;Address Opcode 	ASM
0x0000	0xF000EF12  	GOTO        36
_interrupt_high:
;Lab1.c,8 :: 		void interrupt_high() iv 0x0008 ics ICS_AUTO {
;Lab1.c,9 :: 		if(TMR0IF_bit){
0x0008	0xA4F2      	BTFSS       TMR0IF_bit, BitPos(TMR0IF_bit+0) 
0x000A	0xD00A      	BRA         L_interrupt_high0
;Lab1.c,10 :: 		if(LATB > 8){LATB = 0;}
0x000C	0x508A      	MOVF        LATB, 0 
0x000E	0x0808      	SUBLW       8
0x0010	0xE202      	BC          L_interrupt_high1
0x0012	0x6A8A      	CLRF        LATB 
0x0014	0xD005      	BRA         L_interrupt_high2
L_interrupt_high1:
;Lab1.c,11 :: 		else{LATB++;}
0x0016	0x508A      	MOVF        LATB, 0 
0x0018	0x0F01      	ADDLW       1
0x001A	0x6E00      	MOVWF       R0 
0x001C	0xFF8AC000  	MOVFF       R0, LATB
L_interrupt_high2:
;Lab1.c,12 :: 		}
L_interrupt_high0:
;Lab1.c,13 :: 		TMR0IF_bit = 0;
0x0020	0x94F2      	BCF         TMR0IF_bit, BitPos(TMR0IF_bit+0) 
;Lab1.c,14 :: 		return;
;Lab1.c,15 :: 		}
L_end_interrupt_high:
L__interrupt_high9:
0x0022	0x0011      	RETFIE      1
; end of _interrupt_high
_main:
;Lab1.c,16 :: 		void main() {
;Lab1.c,18 :: 		ADCON1 = 0x0F;         // Configurando as portas como digital
0x0024	0x0E0F      	MOVLW       15
0x0026	0x6EC1      	MOVWF       ADCON1 
;Lab1.c,20 :: 		TRISA.TRISA0 = 1;     // RA0 como entrada para o btn de 1s
0x0028	0x8092      	BSF         TRISA, 0 
;Lab1.c,21 :: 		TRISA.TRISA1 = 1;     // RA1 como entrada para o btn de 0.25s
0x002A	0x8292      	BSF         TRISA, 1 
;Lab1.c,23 :: 		TRISB = 0x0;           // Todas as portas B como saída
0x002C	0x6A93      	CLRF        TRISB 
;Lab1.c,24 :: 		LATB = 0x0;            // Zera a saída
0x002E	0x6A8A      	CLRF        LATB 
;Lab1.c,26 :: 		INTCON = 0b10100000;   // Interrupção
0x0030	0x0EA0      	MOVLW       160
0x0032	0x6EF2      	MOVWF       INTCON 
;Lab1.c,32 :: 		TMR0H = 0x0B;          // Timer 0 High
0x0034	0x0E0B      	MOVLW       11
0x0036	0x6ED7      	MOVWF       TMR0H 
;Lab1.c,33 :: 		TMR0L = 0xDC;          // Timer 0 Low
0x0038	0x0EDC      	MOVLW       220
0x003A	0x6ED6      	MOVWF       TMR0L 
;Lab1.c,34 :: 		T0CON = 0b00000010;    // Config Timer 0
0x003C	0x0E02      	MOVLW       2
0x003E	0x6ED5      	MOVWF       T0CON 
;Lab1.c,36 :: 		while(1){
L_main3:
;Lab1.c,37 :: 		if(PORTA.RA0 == 0){
0x0040	0xB080      	BTFSC       PORTA, 0 
0x0042	0xD003      	BRA         L_main5
;Lab1.c,38 :: 		T0CON = 0b10000100;      // Timer prescaler 1:64
0x0044	0x0E84      	MOVLW       132
0x0046	0x6ED5      	MOVWF       T0CON 
;Lab1.c,39 :: 		}
0x0048	0xD004      	BRA         L_main6
L_main5:
;Lab1.c,40 :: 		else if(PORTA.RA1 == 0){
0x004A	0xB280      	BTFSC       PORTA, 1 
0x004C	0xD002      	BRA         L_main7
;Lab1.c,41 :: 		T0CON = 0b10000010;     // Timer prescaler 1:16
0x004E	0x0E82      	MOVLW       130
0x0050	0x6ED5      	MOVWF       T0CON 
;Lab1.c,42 :: 		}
L_main7:
L_main6:
;Lab1.c,43 :: 		}
0x0052	0xD7F6      	BRA         L_main3
;Lab1.c,44 :: 		}
L_end_main:
0x0054	0xD7FF      	BRA         $+0
; end of _main
Symbol List:
//** Routines locations **
//ADDRESS    SIZE    PROCEDURE
//----------------------------------------------
0x0008      [28]    _interrupt_high
0x0024      [50]    _main
//** Variables locations ** 
//ADDRESS    SIZE    VARIABLE
//----------------------------------------------
0x0000       [1]    R0
0x0001       [1]    R1
0x0002       [1]    R2
0x0003       [1]    R3
0x0004       [1]    R4
0x0005       [1]    R5
0x0006       [1]    R6
0x0007       [1]    R7
0x0008       [1]    R8
0x0009       [1]    R9
0x000A       [1]    R10
0x000B       [1]    R11
0x000C       [1]    R12
0x000D       [1]    R13
0x000E       [1]    R14
0x000F       [1]    R15
0x0010       [1]    R16
0x0011       [1]    R17
0x0012       [1]    R18
0x0013       [1]    R19
0x0014       [1]    R20
0x0F80       [1]    PORTA
0x0F8A       [1]    LATB
0x0F92       [1]    TRISA
0x0F93       [1]    TRISB
0x0FC1       [1]    ADCON1
0x0FD5       [1]    T0CON
0x0FD6       [1]    TMR0L
0x0FD7       [1]    TMR0H
0x0FD8       [1]    STATUS
0x0FD9       [1]    FSR2L
0x0FDA       [1]    FSR2H
0x0FDE       [1]    POSTINC2
0x0FE0       [1]    BSR
0x0FE1       [1]    FSR1L
0x0FE2       [1]    FSR1H
0x0FE4       [1]    PREINC1
0x0FE6       [1]    POSTINC1
0x0FE7       [1]    INDF1
0x0FE8       [1]    WREG
0x0FE9       [1]    FSR0L
0x0FEA       [1]    FSR0H
0x0FEE       [1]    POSTINC0
0x0FF2       [0]    TMR0IF_bit
0x0FF2       [1]    INTCON
0x0FF3       [1]    PRODL
0x0FF4       [1]    PRODH
0x0FF5       [1]    TABLAT
0x0FF6       [1]    TBLPTRL
0x0FF7       [1]    TBLPTRH
0x0FF8       [1]    TBLPTRU
